services:
  frontend:
    container_name: frontend_prod_food_adction
    build:
      context: ./front-end
      dockerfile: Dockerfile
      args:
        - VITE_API_URL=${VITE_API_URL}
    ports:
      - "4176:80"
    restart: always

  api:
    container_name: api_node_prod_food_adction
    build:
      context: ./api-node
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=${NODE_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - API_PORT=${API_PORT}
      - CORS_ORIGIN=http://localhost:4176
      - PY_API_URL=${PY_API_URL}
      - FIRST_ADMIN_PASSWORD=${FIRST_ADMIN_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - PUBLIC_DIR=${PUBLIC_DIR}
      - UPLOAD_DIR=${UPLOAD_DIR}
      - MAX_FILE_SIZE_MB=${MAX_FILE_SIZE_MB}
    ports:
      - "3003:3000"
    restart: always
    depends_on:
      - postgresql
    networks:
      - my_network_food_adction

  postgresql:
    container_name: postgresql_food_adction_db
    image: bitnami/postgresql:latest
    environment:
      - POSTGRESQL_USERNAME=${POSTGRESQL_USERNAME}
      - POSTGRESQL_PASSWORD=${POSTGRESQL_PASSWORD}
      - POSTGRESQL_DATABASE=${POSTGRESQL_DATABASE}
      - POSTGRESQL_PORT_NUMBER=${POSTGRESQL_PORT_NUMBER}
    restart: always
    ports:
      - "5435:5432"
    volumes:
      - postgresql_data:/bitnami/postgresql
    networks:
      - my_network_food_adction

  python:
    container_name: api_python_prod_food_adction
    build:
      context: ./api-python
      dockerfile: Dockerfile
    restart: always
    environment:
      - FLASK_ENV=${FLASK_ENV}
      - DB_URL=${DB_URL}
    networks:
      - my_network_food_adction

volumes:
  postgresql_data:
    driver: local
  shared_data:
    driver: local

networks:
  my_network_food_adction:
    driver: bridge